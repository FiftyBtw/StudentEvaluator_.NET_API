kind: pipeline
type: docker
name: default

trigger:
  event:
    - push

steps:
  - name: build
    image: mcr.microsoft.com/dotnet/sdk:8.0
    commands:
      - cd StudentEvaluator_API_EF
      - dotnet restore StudentEvaluator_API_EF.sln
      - dotnet build StudentEvaluator_API_EF.sln -c Release --no-restore

  - name: tests
    image: mcr.microsoft.com/dotnet/sdk:8.0
    commands:
      - cd StudentEvaluator_API_EF
      - dotnet restore StudentEvaluator_API_EF.sln
      - dotnet test StudentEvaluator_API_EF.sln --no-restore
    depends_on: [build]

  - name: code-analysis
    image: hub.codefirst.iut.uca.fr/marc.chevaldonne/codefirst-dronesonarplugin-dotnet8
    environment:
      sonar_host: https://codefirst.iut.uca.fr/sonar/
      sonar_token:
        from_secret: SECRET_SONAR_LOGIN
      project_key: Student_Evaluator-API
    commands:
      - cd StudentEvaluator_API_EF
      - dotnet restore StudentEvaluator_API_EF.sln
      - dotnet sonarscanner begin /k:$${project_key} /d:sonar.host.url=$${sonar_host} /d:sonar.login=$${sonar_token}
      - dotnet build StudentEvaluator_API_EF.sln -c Release --no-restore
      - dotnet test StudentEvaluator_API_EF.sln --logger trx --no-restore /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura --collect "XPlat Code Coverage"
      - reportgenerator -reports:"**/coverage.cobertura.xml" -reporttypes:SonarQube -targetdir:"coveragereport"
      - dotnet publish StudentEvaluator_API_EF.sln -c Release --no-restore -o CI_PROJECT_DIR/build/release
      - dotnet sonarscanner end /d:sonar.login=$${sonar_token}
    when:
      branch:
        - master
      event:
        - push
        - pull_request
    depends_on: [ tests ]


  - name: generate-and-deploy-docs
    image: hub.codefirst.iut.uca.fr/thomas.bellembois/codefirst-docdeployer
    failure: ignore
    volumes:
      - name: docs
        path: /docs
    commands:
      - /entrypoint.sh
    when:
      branch:
        - master
    depends_on: [ build ]

  - name: docker-build-and-push
    image: plugins/docker
    settings:
      dockerfile: StudentEvaluator_API_EF/Dockerfile
      context: StudentEvaluator_API_EF
      registry: hub.codefirst.iut.uca.fr
      repo: hub.codefirst.iut.uca.fr/benjamin.paczkowski/sae_2a_entity_framework
      username:
        from_secret: SECRET_REGISTRY_USERNAME
      password:
        from_secret: SECRET_REGISTRY_PASSWORD
    when:
      branch:
        - master

  - name: deploy-container
    image: hub.codefirst.iut.uca.fr/thomas.bellembois/codefirst-dockerproxy-clientdrone:latest
    environment:
      IMAGENAME: hub.codefirst.iut.uca.fr/benjamin.paczkowski/sae_2a_entity_framework:latest
      CONTAINERNAME: studentevaluator-api
      COMMAND: create
      OVERWRITE: true
      CODEFIRST_CLIENTDRONE_ENV_ASPNETCORE_HTTP_PORTS: 80
    depends_on:
      - docker-build-and-push

volumes:
  - name: docs
    temp: { }